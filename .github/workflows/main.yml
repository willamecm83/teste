name: Release on PR merge

on:
  pull_request:
    types: [closed]
    branches:
      - main   # ✅ só roda quando o PR é mergeado na main

jobs:
  release:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get last tag
        id: get_last_tag
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0 || echo "v0.0.0")
          echo "last_tag=$LAST_TAG" >> $GITHUB_OUTPUT

      - name: Decide bump type from labels
        id: bump_type
        run: |
          LABELS=$(echo '${{ toJson(github.event.pull_request.labels) }}')
          echo "Labels do PR: $LABELS"

          BUMP="patch" # valor padrão

          if echo "$LABELS" | grep -q '"name": *"major"'; then
            BUMP="major"
          elif echo "$LABELS" | grep -q '"name": *"minor"'; then
            BUMP="minor"
          fi

          echo "bump=$BUMP" >> $GITHUB_OUTPUT

      - name: Bump version
        id: bump_version
        run: |
          LAST_TAG=${{ steps.get_last_tag.outputs.last_tag }}
          BUMP=${{ steps.bump_type.outputs.bump }}

          IFS='.' read -r major minor patch <<< "${LAST_TAG#v}"

          case $BUMP in
            major)
              major=$((major+1))
              minor=0
              patch=0
              ;;
            minor)
              minor=$((minor+1))
              patch=0
              ;;
            patch)
              patch=$((patch+1))
              ;;
          esac

          NEW_TAG="v$major.$minor.$patch"
          echo "new_tag=$NEW_TAG" >> $GITHUB_OUTPUT

      - name: Generate changelog
        id: changelog
        run: |
          LAST_TAG=${{ steps.get_last_tag.outputs.last_tag }}
          echo "Gerando changelog entre $LAST_TAG...HEAD"

          git log $LAST_TAG..HEAD --pretty=format:"- %s (%h)" > CHANGELOG.md

          # Corrigido: delimitador na primeira coluna, sem espaços
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          cat CHANGELOG.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.bump_version.outputs.new_tag }}
          name: Release ${{ steps.bump_version.outputs.new_tag }}
          body: ${{ steps.changelog.outputs.changelog }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
